// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  hash      String
  firstName String
  lastName  String
  role      UserRole @default(NORMAL_USER)

  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  createdRides Ride[]
  booking      Booking[]

  @@map("users")
}

enum UserRole {
  ADMIN
  NORMAL_USER
}

model Coordinates {
  id           Int     @id @default(autoincrement())
  longitude    Float
  latitude     Float
  locationName String?

  @@map("coordinates")
}

model Ride {
  id                   Int      @id @default(autoincrement())
  sourceLatitude       Float
  sourceLongitude      Float
  destinationLatitude  Float
  destinationLongitude Float
  dateTime             DateTime
  driver               User     @relation(fields: [driverId], references: [id])
  driverId             Int

  booking Booking[]

  @@map("rides")
}

enum BookingStatus {
  BOOKED
  CANCELLED
}

model Booking {
  id          Int           @id @default(autoincrement())
  ride        Ride          @relation(fields: [rideId], references: [id])
  rideId      Int
  passenger   User          @relation(fields: [passengerId], references: [id])
  passengerId Int
  status      BookingStatus @default(BOOKED)

  @@index([passengerId], name: "idx_passenger_id")
  @@map("bookings")
}
